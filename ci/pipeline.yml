resources:
- name: cities-service
  type: git
  source:
    uri: {{git-uri}}
  check_every: 8s

- name: resource-version
  type: semver
  source:
    branch: version
    driver: git
    file: version
    initial_version: 0.0.1
    uri: {{GIT-SSH-URI}}
    private_key: {{GIT_KEY}}
    git_user: {{GIT_USER}}

jobs:
- name: testSrc
  plan:
  - get: cities-service
    trigger: true
  - task: test
    file: cities-service/ci/tasks/test.yml

- name: prepPCFSpace
  plan:
  - get: cities-service
    trigger: true
  - task: prepPCFSpace
    file: cities-service/ci/tasks/prepPCFSpace.yml
    params:
      api: {{CF_API}}
      organization: {{CF_ORG}}
      space: {{CF_SPACE}}
      username: {{CF_USERNAME}}
      password: {{CF_PASSWORD}}
      ssl: {{CF_SSL}}
      APPNAME: {{APPNAME}}
      SERVICE_NAME: {{SERVICE_NAME}}

- name: deployApp
  plan:
  - get: cities-service
    passed:
    - testSrc
    - prepPCFSpace
    trigger: true
  - get: resource-version
    params:
      bump: patch
  - task: package
    file: cities-service/ci/tasks/package.yml
    params:
      APPNAME: {{APPNAME}}
  - put: resource-version
    params: {file: resource-version/number}
  - get: resource-version
  - task: deploy
    file: cities-service/ci/tasks/deployToPCF.yml
    params:
      api: {{CF_API}}
      organization: {{CF_ORG}}
      space: {{CF_SPACE}}
      username: {{CF_USERNAME}}
      password: {{CF_PASSWORD}}
      ssl: {{CF_SSL}}
      APPNAME: {{APPNAME}}

- name: testAppOnPCF
  plan:
  - get: cities-service
    passed:
    - deployApp
    trigger: true
  - task: test
    file: cities-service/ci/tasks/testAppOnPCF.yml
    params:
      api: {{CF_API}}
      organization: {{CF_ORG}}
      space: {{CF_SPACE}}
      username: {{CF_USERNAME}}
      password: {{CF_PASSWORD}}
      ssl: {{CF_SSL}}
      APPNAME: {{APPNAME}}
